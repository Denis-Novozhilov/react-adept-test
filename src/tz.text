
Тестовое Задание:
Создайте одностраничное приложение “Список компаний”, 
используя библиотеку React.js.

Требования: React, Redux(Redux-ToolKit), TypeScript, 
остальное на ваше усмотрение, 
НО стоит использовать минимальное кол-во библиотек
(например, таблицу нужно точно сделать самостоятельно, 
без сторонних библиотек)

Дано: Слева имеется таблица со списком компаний. 
Справа - таблица сотрудников выбранной компании. 
Данные в таблицах должны храниться в сторе. 
Данные для таблиц "компании" и "сотрудники" - фейковые, 
создать самостоятельно.

Шапка таблицы "компании": Чекбокс “Выделить всё”
Тело таблицы имеет столбцы: 
| Чекбокс | Название компании | Кол-во сотрудников | Адрес

При клике по чекбоксу в строке, соответствующая строка выделяется цветом на ваше усмотрение. 
При клике по чекбоксу “Выделить всё” - выделяются все строки.

При выделении одной компании - справа, в таблице "сотрудники", видим данные сотрудников этой компании.

Шапка таблицы "сотрудники": Чекбокс “Выделить всё”
Тело таблицы имеет столбцы: | Чекбокс | Фамилия | Имя | Должность

В таблице "сотрудники" при клике по чекбоксу в строке, соответствующая строка выделяется цветом на ваше усмотрение.

Если не выделена ни одна из компаний, то таблица "сотрудники" не видна.
[] Все поля таблиц редактируемые кроме счётчика сотрудников в таблице "компании".

[]В обеих таблицах реализовать механизм добавления/удаления компаний/сотрудников по соответствующим кнопкам. 
Удаление может быть множественное(если выделены несколько строк).

[]При добавлении/удалении сотрудников у компании, счётчик сотрудников в таблице "компании" обновляется.

[]Готовый проект нужно разместить в репозитории на Github или Gitlab.

[]Будет плюсом: предусмотреть вариант когда 
  компаний/сотрудников может быть 10 000+(желательно предложить вариант без переключения по страницам, 
  динамическая загрузка при скролле)

Примечания:
Желательно использовать минимум сторонних библиотек.
Дизайн приложения  на ваш вкус. Выполнение всех пунктов не является обязательным, 
но желательным. Чем точнее будет выполнено тестовое задание, 
тем у вас больше шансов получить положительный ответ.


![] разделить логику компонентов ItemRow 
![] разделить логику компонентов List

[] bookmark -> toggleAllCompaniesCheck in slice is complete. now lets improve and test toggleAllWorkersCheck.
[] and later - add feature [add] and [del] for companies and workers

[] delete all borders and useless outlines

[] fix all linter errors

[] Fix issue addCompanyItemSelection/addWorkerItemSelection running twise during second checking 

[] Все поля таблиц редактируемые кроме счётчика сотрудников в таблице "компании".

[]В обеих таблицах реализовать механизм добавления/удаления компаний/сотрудников по соответствующим кнопкам. 
  Удаление может быть множественное(если выделены несколько строк).

[]При добавлении/удалении сотрудников у компании, счётчик сотрудников в таблице "компании" обновляется.

[] Ulbi - virtualized lists checkout

[]Будет плюсом: предусмотреть вариант когда 
  компаний/сотрудников может быть 10 000+(желательно предложить вариант без переключения по страницам, 
  динамическая загрузка при скролле)

[] добавить white spacing в 2 строки? проверить скрол и переполнение

[] delete useless redusers which is not used

[] add necessary attributes to all inputs type="checkbox" name="" id="" 

[] clear old css styles
[] delete all comments
[] check all TZ tasks
[] min adaptive
[] check all key in list renders
[] eject all custom properties to main css file. such as => :root {--item-size: 38px;}
[] make custom checkbox checkers
[] make dark / light themes
[] проверка на переполнение каждого элемента
[] проверка на переполнение каждого списка
[] проверка на отсутствие значений элементов
[] scroll style if necessary
[] style selected text
[] test scroll and other via different browsers 
[] подправить font-size
[] добавить redux ToolKit slice
[] добавить mock generator companyes name
[] проверить поведение на mobile
[] del all console.logs
[] improve to call action addCompanyItemSelection twice is production or only dev?
[] сделать нагрузочное тестирование с проверкой 10_000 элементов и со 100_000 элементов
[] add handler to checkbox selected ItemWorkers
[] try to test, cath and solve (double click on company)
    VM2004:9542 Warning: Cannot update a component (`App`) while rendering a different component (`ItemRow`). To locate the bad setState() call inside `ItemRow`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render
    at ItemRow (http://localhost:5173/src/components/ItemRow/ItemRow.tsx?t=1708612022973:23:27)
    at div
    at List (http://localhost:5173/src/components/List/List.tsx?t=1708612022973:19:24)
    at div
    at div
    at div
    at App (http://localhost:5173/src/App.tsx?t=1708612022973:23:25)
    at Provider (http://localhost:5173/node_modules/.vite/deps/react-redux.js?v=fc086545:1093:3)